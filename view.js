// Generated by CoffeeScript 1.4.0
var SIO, ___, _add_event_listener, _events, _get_x, _get_y, _init, _sock;

SIO = ':4568';

___ = function(x) {
  return console.log(x);
};

_events = {
  down: ['mousedown', 'touchstart'],
  up: ['mouseup', 'touchend'],
  move: ['mousemove', 'touchmove']
};

_get_x = function(e, i) {
  var _ref;
  if (i == null) {
    i = 0;
  }
  return ((_ref = e.targetTouches) != null ? _ref[i].pageX : void 0) || e.clientX;
};

_get_y = function(e, i) {
  var _ref;
  if (i == null) {
    i = 0;
  }
  return ((_ref = e.targetTouches) != null ? _ref[i].pageY : void 0) || e.clientY;
};

_add_event_listener = function(el, event_key, fun) {
  var event, _i, _len, _ref, _results;
  _ref = _events[event_key];
  _results = [];
  for (_i = 0, _len = _ref.length; _i < _len; _i++) {
    event = _ref[_i];
    _results.push(el.addEventListener(event, fun, false));
  }
  return _results;
};

_init = function() {
  _add_event_listener(document.getElementById('left'), 'move', function(event) {
    ___('<');
    _sock.emit('left', (_get_y(event)) / window.innerHeight);
    return event.preventDefault();
  });
  return _add_event_listener(document.getElementById('right'), 'move', function(event) {
    ___('>');
    _sock.emit('right', (_get_y(event)) / window.innerHeight);
    return event.preventDefault();
  });
};

___('initialize socket');

_sock = io.connect(SIO);

_sock.on('connect', function() {
  return ___('connected');
});
